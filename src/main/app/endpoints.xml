<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:wd-connector="http://www.mulesoft.org/schema/mule/wd-connector"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/wd-connector http://www.mulesoft.org/schema/mule/wd-connector/current/mule-wd-connector.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<!-- In this file you should declare all inbound endpoints of your application -->

	<flow name="triggerFlow" processingStrategy="synchronous"
		
		doc:description="This is the simpliest entry point to start the excecution of your Kick
Here you should:
	* Define any inbound endpoint
	* Handle any input parameter and transform it into the expected format by the mainFlow
Here you should not:
	* Run validations against external systems
	* Choose flow of your application based on input parameters">
		<poll doc:name="fireup Worker synchronization">
			<fixed-frequency-scheduler frequency="${poll.frequencyMillis}"
				startDelay="${poll.startDelayMillis}" />
			<watermark variable="lastQueryDate" default-expression="${watermark.defaultExpression}"  />
			<processor-chain doc:name="query Workers and set collection">
                <logger message="Fetching Workday updates...#[flowVars.lastQueryDate.getTime()]" level="INFO" doc:name="log 'Fetching workday updates...'"/>
                <dw:transform-message doc:name="Create GetWorkers Request" metadata:id="cd11c823-8f27-41ac-80e4-1ef463edcb0a">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
ns0#Get_Workers_Request: {
	ns0#Request_Criteria: {
		ns0#Transaction_Log_Criteria_Data: {
			ns0#Transaction_Date_Range_Data: {
				ns0#Updated_From: flowVars.lastQueryDate,
				ns0#Updated_Through: now - |PT10S|
			}
		},
		ns0#Exclude_Inactive_Workers: true,
		ns0#Exclude_Employees: false,
		ns0#Exclude_Contingent_Workers: false
	},
	ns0#Response_Group: {
		ns0#Include_Reference: true,
		ns0#Include_Personal_Information: true,
		ns0#Include_Transaction_Log_Data: true,
		ns0#Include_User_Account: true
	}
}]]></dw:set-payload>
                </dw:transform-message>
				<wd-connector:invoke config-ref="Workday__Basic" type="Human_Resources||Get_Workers" doc:name="get Workers from Workday"/>
                <dw:transform-message doc:name="GetWorkers Response to List&lt;Map&gt;" metadata:id="36af7649-c6cc-463b-9736-da1bc8b61c7a">
                    <dw:input-payload doc:sample="sample_data\Get_Workers_Response.xml"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
payload.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker map {
	name        : "",
	active      : true,
	firstName   : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Name_Data.ns0#Legal_Name_Data.ns0#Name_Detail_Data.ns0#First_Name,
	lastName    : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Name_Data.ns0#Legal_Name_Data.ns0#Name_Detail_Data.ns0#Last_Name,
	middleName  : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Name_Data.ns0#Legal_Name_Data.ns0#Name_Detail_Data.ns0#Middle_Name default null,
	userName    : $.ns0#Worker_Data.ns0#User_Account_Data.ns0#User_Name default null,
	email       : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Email_Address_Data[-1].ns0#Email_Address when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Email_Address_Data != null otherwise null,
	homePhone   : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Phone_Data.@ns0#Formatted_Phone[-1] when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Phone_Data != null otherwise null,
	title       : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Name_Data.ns0#Preferred_Name_Data.ns0#Name_Detail_Data.ns0#Prefix_Data.ns0#Salutation_Reference.@ns0#Descriptor default null,
	"zip"       : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data[-1].ns0#Postal_Code when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data != null otherwise null,
	street      : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data[-1].*ns0#Address_Line_Data[-1] when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data != null otherwise null,
	country     : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data[-1].ns0#Country_Reference.*ns0#ID[1] when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data != null otherwise null,
	city        : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data[-1].ns0#Municipality when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data != null otherwise null,
	state       : $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data[-1].ns0#Country_Region_Reference.*ns0#ID[-1] when $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.*ns0#Address_Data != null otherwise null
} unless (payload.ns0#Get_Workers_Response.ns0#Response_Data is :null) otherwise []]]></dw:set-payload>
                    <dw:set-variable variableName="lastQueryDate"><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
payload.ns0#Get_Workers_Response.ns0#Request_Criteria.*ns0#Transaction_Log_Criteria_Data[0].ns0#Transaction_Date_Range_Data.ns0#Updated_Through]]></dw:set-variable>
                </dw:transform-message>

			</processor-chain>
		</poll>
        <expression-filter expression="#[payload.size() &gt; 0]" doc:name="Filter empty result set"/>


        <logger level="INFO" doc:name="log workers" message="Workday workers: #[payload]"/>
        <batch:execute name="broadcastUsers" doc:name="execute broadcastUsers batch"/>

		
	</flow>

</mule>
