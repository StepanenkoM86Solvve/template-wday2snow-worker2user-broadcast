<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:wd-hr="http://www.mulesoft.org/schema/mule/wd-hr" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/wd-hr http://www.mulesoft.org/schema/mule/wd-hr/current/mule-wd-hr.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

    <batch:job name="broadcastUsers">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="GetServiceNowUserIfExistsStep">
                <enricher source="#[payload]" target="#[recordVars.listOfUsersInServiceNow]" doc:name="store in recordVars.listOfUsersInServiceNow">
                    <processor-chain doc:name="Processor Chain">
                        <dw:transform-message doc:name="Create Request">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#getRecords: {
		ns0#email         : payload.email,
		ns0#"first_name"  : payload.firstName,
		ns0#"last_name"   : payload.lastName
	}
}]]></dw:set-payload>
                        </dw:transform-message>
                        <servicenow:invoke config-ref="ServiceNow" type="sys_user||getRecords" doc:name="ServiceNow"/>
                        <dw:transform-message doc:name="XML to List&lt;Map&gt;">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.getRecordsResponse.*getRecordsResult
unless payload.getRecordsResponse is :empty otherwise []]]></dw:set-payload>
                        </dw:transform-message>
                    </processor-chain>

                    


                </enricher>


            </batch:step>
            <batch:step name="InsertUserToServiceNowStep" accept-expression="recordVars.listOfUsersInServiceNow.isEmpty()">
                <dw:transform-message doc:name="Map to XML">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#insert: {
		ns0#active: payload.active,
		ns0#city: payload.city,
		ns0#country: payload.country,
		ns0#email: payload.email,
		ns0#"first_name": payload.firstName,
		ns0#"home_phone": payload.homePhone,
		ns0#"last_name": payload.lastName,
		ns0#"middle_name": payload.middleName,
		ns0#name: payload.name,
		ns0#state: payload.state,
		ns0#street: payload.street,
		ns0#title: payload.title,
		ns0#"user_name": payload.userName,
		ns0#zip: payload."zip"
	}
}]]></dw:set-payload>
                </dw:transform-message>
                <servicenow:invoke config-ref="ServiceNow" type="sys_user||insert" doc:name="ServiceNow"/>
                <logger message="ServiceNow insert finished..." level="INFO" doc:name="Log insert finished"/>
            </batch:step>
            <batch:step name="UpdateUserInServiceNowStep" accept-expression="!recordVars.listOfUsersInServiceNow.isEmpty()">
                <dw:transform-message doc:name="Map to XML">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/sys_user
---
{
	ns0#update: {
		ns0#"sys_id": recordVars.listOfUsersInServiceNow[0]."sys_id",
		ns0#active: payload.active,
		ns0#city: payload.city,
		ns0#country: payload.country,
		ns0#email: payload.email,
		ns0#"first_name": payload.firstName,
		ns0#"home_phone": payload.homePhone,
		ns0#"last_name": payload.lastName,
		ns0#"middle_name": payload.middleName,
		ns0#name: payload.name,
		ns0#state: payload.state,
		ns0#street: payload.street,
		ns0#title: payload.title,
		ns0#"user_name": payload.userName,
		ns0#zip: payload."zip"
	}
}
]]></dw:set-payload>
                </dw:transform-message>
                <servicenow:invoke config-ref="ServiceNow" type="sys_user||update" doc:name="ServiceNow"/>
                <logger message="ServiceNow update finished..." level="INFO" doc:name="Log update finished"/>
            </batch:step>

        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name=" transform response to JSON"/>
            <logger level="INFO" doc:name="Logger" message="Batch completed: #[payload]"/>
        </batch:on-complete>
    </batch:job>

</mule>
