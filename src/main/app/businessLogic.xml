<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

	<data-mapper:config name="pojo_to_pojo" transformationGraphPath="pojo_to_pojo.grf" doc:name="pojo_to_pojo" />
    <data-mapper:config name="pojo_to_pojo_1" transformationGraphPath="pojo_to_pojo_1.grf" doc:name="pojo_to_pojo_1"/>
	
	<batch:job name="businessLogicBatch1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
        <batch:input>
            <custom-transformer class="org.mule.kicks.CreateIterable" doc:name="create Iterable with Insert objects"/>
        </batch:input>
		<batch:process-records>
			<batch:step name="foreachWorkerInWorkdayCreateUserInServiceNow">
				<flow-ref name="createUserInServiceNow" doc:name="call createUserInServiceNow" />
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="transform BatchJobInstance to JSON" />
			<logger level="INFO" doc:name="log 'Migration process has finished'"
				message="Migration process has finished: #[payload]" />
		</batch:on-complete>
	</batch:job>

    <flow name="createUserInServiceNow" doc:name="createUserInServiceNow">
        <enricher source="#[payload]" target="#[flowVars['listOfUsersInServiceNow']]" doc:name="Message Enricher">
            <processor-chain doc:name="Processor Chain">
                <custom-transformer class="org.mule.kicks.CreateGetRecords" doc:name="prepare query for deciding the upsert operation"/>
                <servicenow:get-user-records config-ref="ServiceNow" doc:name="query user to be upserted"/>
            </processor-chain>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[listOfUsersInServiceNow.getGetRecordsResult().isEmpty()]">
                <data-mapper:transform config-ref="pojo_to_pojo" doc:name="map WorkDay Worker to ServiceNow Insert"/>
                <servicenow:insert-user config-ref="ServiceNow" doc:name="insert User in ServiceNow"/>
            </when>
            <otherwise>
                <data-mapper:transform config-ref="pojo_to_pojo_1" doc:name="map WorkDay Worker to ServiceNow Update"/>
                <all doc:name="All">
                    <processor-chain>
                        <expression-component doc:name="add the ServiceNow Id to the Object to be updated"><![CDATA[payload.setSysId(listOfUsersInServiceNow.getGetRecordsResult().get(0).getSysId());]]></expression-component>
                        <servicenow:update-user config-ref="ServiceNow" doc:name="update User in ServiceNow"/>
                    </processor-chain>
                    <processor-chain>
                        <json:object-to-json-transformer doc:name="Object to JSON"/>
                        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                    </processor-chain>
                </all>
            </otherwise>
        </choice>
        <json:object-to-json-transformer doc:name=" transform response to JSON"/>
        <logger message="#[payload]" level="INFO" doc:name="log record result"/>
    </flow>

</mule>
