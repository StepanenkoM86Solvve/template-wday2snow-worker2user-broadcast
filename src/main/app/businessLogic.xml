<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:wd-hr="http://www.mulesoft.org/schema/mule/wd-hr" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.6.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/wd-hr http://www.mulesoft.org/schema/mule/wd-hr/current/mule-wd-hr.xsd">

    <batch:job name="broadcastUsers">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="GetServiceNowUserIfExists">
                <enricher source="#[payload]" target="#[recordVars['listOfUsersInServiceNow']]" doc:name="store in flowVars['listOfUsersInServiceNow']">
                    <servicenow:get-records config-ref="ServiceNow" type="SYS_USER" doc:name="query user to be upserted in ServiceNow">
                        <servicenow:get-records-request>
                            <servicenow:get-records-request key="lastName">#[payload['lastName']]</servicenow:get-records-request>
                            <servicenow:get-records-request key="email">#[payload['emailAddress']]</servicenow:get-records-request>
                            <servicenow:get-records-request key="firstName">#[payload['firstName']]</servicenow:get-records-request>
                        </servicenow:get-records-request>
                    </servicenow:get-records>


                </enricher>

            </batch:step>
            <batch:step name="UpsertUser" >

                <choice doc:name="Choice">
                    <when expression="#[recordVars['listOfUsersInServiceNow'].getGetRecordsResult().isEmpty()]">
                        <servicenow:insert config-ref="ServiceNow" type="SYS_USER" doc:name="insert User in ServiceNow">
                            <servicenow:insert-request ref="#[payload]"/>
                        </servicenow:insert>
                    </when>
                    <otherwise>
                        <expression-component doc:name="add the servicenow Id to the object to be updated"><![CDATA[payload.put('sysId', recordVars['listOfUsersInServiceNow'].getGetRecordsResult().get(0).getSysId());]]></expression-component>
                        <servicenow:update config-ref="ServiceNow" type="SYS_USER" doc:name="update User in servicenow">
                            <servicenow:update-request ref="#[payload]"/>
                        </servicenow:update>
                    </otherwise>
                </choice>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name=" transform response to JSON"/>
            <logger level="INFO" doc:name="Logger" message="Batch completed: #[payload]"/>
        </batch:on-complete>
    </batch:job>

</mule>
